#!/usr/bin/perl
#

use strict;
use warnings;

use FindBin;
use lib "$FindBin::Bin/../lib";

use Getopt::Long;
use NADTMythTV;
use NADTMythTV::Util;
use NADTMythTV::Publish::S3Cmd;
use YAML;

# parse args
my %opts = (
  verbose => 0,
  debug => 0,
);
my @origargs = @ARGV;
GetOptions(
  \%opts,
  'verbose!',
  'debug!',
);

# load config
my $cfg = NADTMythTV->cfg;

# get logging
my $log = NADTMythTV->log( verbose => $opts{verbose}, debug => $opts{debug} );
$log->debug("orig args: @origargs");
$log->info('START');

# set up MythTV
my $nadtmyth = NADTMythTV->new;

# set up database
my $mythdb = $nadtmyth->mythdb_ac;

# get a lock
NADTMythTV::Util->lock('publish');

# find to_publish records where complete is false
my $to_publish_rs = $mythdb->resultset('NadtmythToPublish');
my $to_publish_it = $to_publish_rs->search( { all_published => 0 } );
while( my $to_publish = $to_publish_it->next ) {
  my $convert = $to_publish->converted;
  my $orig = $convert->recorded;
  my $fulltitle = NADTMythTV::Util->fulltitle( $orig );
  my $starttime = $orig->starttime;
  $log->info("processing to_publish record for $fulltitle at $starttime");
  my $dests = $to_publish->to_publish_dest;
  while( my $dest = $dests->next ) {
    $log->info("processing destination ", $dest->dest, " using $cfg->{publish}->{dests}->{$dest->dest}->{type}");
    # instantiate a processor
    my $processor = $cfg->{publish}->{dests}->{$dest->dest}->{type}->new;
    # call the publish method
    $processor->publish( $dest );
    # update published, publish_date and purge_date
    $dest->published(1);
    $dest->publish_date( \'NOW()' );
    my $purge_date = "NOW() + INTERVAL " . $dest->purge_days . " DAY";
    $dest->purge_date( \$purge_date );
    $dest->update;
  }
}

# all done
NADTMythTV::Util->unlock;
$log->info('STOP');
exit(0);

#
# EOF
