#!/bin/bash
#

# function to clean up the temp dir on exit
function onexit {
  local exit_status=${1:-$?}
  if [ -d $tmpdir ]
  then
    cd /
    rm -rf $tmpdir
  fi
  exit $exit_status
}

# trap all errors
trap onexit ERR
set -e

if [ ! $# == 3 ]; then
  echo "Usage: $0 sourcedir file destdir"
  exit
fi

sourcedir="$1"
file="$2"
destdir="$3"
tmpdir="/srv/mythtv/tmp/mythtv_to_x264.$$"
mkdir -p $tmpdir
cd $tmpdir

vcodec=libx264
vbitrate=6000k
abitrate=256k
acodec=libfaac

# were there even any commercials?
SKIPLIST=$(mythcommflag --getskiplist -f "$sourcedir/$file" | tail -n 1 | awk -F : '{print $2}' | sed -e 's/ //g')
if [ "x$SKIPLIST" = "x" ]
then
  transcodefile="$sourcedir/$file"
else
  # copy the commercial skip list to the cutlist for the original video
  mythcommflag --gencutlist -f "$sourcedir/$file"

  # get the cutlist into a string var
  CUTLIST=$(mythcommflag --getcutlist -f "$sourcedir/$file" | tail -n 1 | awk -F : '{print $2}' | sed 's/,/ /g')
  echo $CUTLIST

  # generate a temp file without the commercials
  tmpfile=$(basename $file .mpg).tmp
  mythtranscode -m -i "$sourcedir/$file" --honorcutlist "$CUTLIST" --showprogress -o "$tmpdir/$tmpfile"

  # clear the cutlist of the original video
  mythcommflag --clearcutlist -f "$sourcedir/$file"
  transcodefile="$tmpdir/$tmpfile"
fi

destfile=$(basename $file .mpg).mp4

# transcode the temp file (two-pass encoding)
ffmpeg -y -i "$transcodefile" -an -pass 1 -vcodec $vcodec -vpre fastfirstpass \
  -b $vbitrate \
  -metadata "title=${file}" -threads 0 \
  "${destdir}/${destfile}"
ffmpeg -y -i "$transcodefile" -acodec $acodec -ab $abitrate -pass 2 -vcodec $vcodec \
  -vpre hq -b $vbitrate \
  -metadata "title=${file}" -threads 0 \
  "${destdir}/${destfile}"

# remove the temp dir
onexit

#
# EOF
