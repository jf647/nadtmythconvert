#!/usr/bin/perl
#

use strict;
use warnings;

use FindBin;
use lib "$FindBin::Bin/../lib";

use Getopt::Long;
use NADTMythTV;
use Path::Class qw|dir file|;

# parse args
my %opts;
my @origargs = @ARGV;
GetOptions(
  \%opts,
  'verbose!',
  'debug!',
);

# load config
my $cfg = NADTMythTV->cfg;

# get logging
my $log = NADTMythTV->log( verbose => $opts{verbose}, debug => $opts{debug} );
$log->info('START');

# set up MythTV
my $nadtmyth = NADTMythTV->new(
  db_cred => {
    dsn => $cfg->{database}->{dsn},
    user => $cfg->{database}->{user},
    password => $cfg->{database}->{password},
  },
);

# set up database
my $nadtdb = $nadtmyth->nadtdb;

# find temp records that haven't been touched recently
my $days = $cfg->{cleanup}->{temp_maxdays};
my $rs = $nadtdb->resultset('Temp');
my @todel;
my $deleted = 0;
$log->debug("searching for temp files with an accessdate older than $days days ago");
my $oldtemps = $rs->search( {
  accessdate => { '<' => \"TIMESTAMPADD(DAY,-$days,NOW())" },
} );
while( my $oldtemp = $oldtemps->next ) {
  my $tempfile = file( $oldtemp->tempdir, $oldtemp->tempfile );
  push @todel, [ $oldtemp->id, $tempfile ];
  $log->debug("found old temp file with id " . $oldtemp->id . ": $tempfile");
}
for my $todel( @todel ) {
  if( -f $todel->[1] ) {
    unless( unlink( $todel->[1] ) ) {
      $log->error("cannot delete $todel->[1]: $!");
      next;
    }
  }
  else {
    $log->warn("$todel->[1] in database but does not exist on disk");
  }
  $rs->find( $todel->[0] )->delete;
  $log->info("removed $todel->[1] from disk and database");
  $deleted++;
}
$log->info("deleted $deleted temp files");

# all done
$log->info('STOP');
exit(0);

#
# EOF
